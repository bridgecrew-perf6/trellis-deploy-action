name: 'Trellis Deploy'
author: Scott Walkinshaw
description: 'GitHub Action for deploying a Trellis based WordPress project'
branding:
  icon: 'send'  
  color: 'green'

inputs:
  node-version:
    description: 'Version of Node JS'
    required: false
    default: '16'
  python-version:
    description: 'Version of Python'
    required: false
    default: '3.9'
  trellis-cli-version:
    description: 'Version of trellis-cli'
    required: false
  deploy:
    description: 'Whether to run the deploy or not. Set this to false if you want more manual control.'
    required: false default: true
  environment:
    description: 'Name of environment to deploy. Defaults to production.'
    required: false
    default: production
  branch:
    description: 'Git branch to deploy. Defaults to `master`.'
    required: false
    default: master
  site-name:
    description: 'Name of the Trellis site to deploy (defaults the first site if not specified)'
    required: false
  theme-name:
    description: 'Name of theme directory'
    required: true
  ansible-vault-password:
    description: 'Ansible Vault password. Use a GitHub secret for this value.'
    required: true
  ssh-private-key:
    description: 'SSH private key (contents of key file). Use a GitHub secret for this value.'
    required: true
  ssh-known-hosts:
    description: 'Known hosts for SSH. Use a GitHub secret for this value.'
    required: true
  
runs:
  using: 'composite'
  steps:
  - uses: actions/setup-node@v2
    with:
      node-version: ${{ inputs.node-version }}
      cache: yarn
      cache-dependency-path: site/web/app/themes/${{ inputs.theme-name }}/yarn.lock
  - uses: actions/setup-python@v2
    with:
      python-version: ${{ inputs.python-version }}
  - uses: shimataro/ssh-key-action@v2
    with:
      key: ${{ inputs.ssh-private-key }}
      known_hosts: ${{ inputs.ssh-known-hosts }}
  - uses: webfactory/ssh-agent@v0.5.4
    with:
      ssh-private-key: ${{ inputs.ssh-private-key }}
  - uses: roots/setup-trellis-cli@main
    with:
      ansible-vault-password: ${{ inputs.ansible-vault-password }}
      version: ${{ inputs.trellis-cli-version }}
  - name: Deploy default site
    if: inputs.deploy == 'true' && inputs.site-name == ''
    run: trellis deploy --branch=${{inputs.branch }} ${{ inputs.environment }}
    shell: bash
    working-directory: trellis
  - name: Deploy site
    if: inputs.deploy == 'true' && inputs.site-name != ''
    run: trellis deploy --branch=${{inputs.branch }} ${{ inputs.environment }} ${{ inputs.site-name }}
    shell: bash
    working-directory: trellis
